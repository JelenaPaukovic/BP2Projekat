//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TeniskiTurniri
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class ModelTeniskiTurniriContainer : DbContext
    {
        public ModelTeniskiTurniriContainer()
            : base("name=ModelTeniskiTurniriContainer")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Ulaznica> UlaznicaSet { get; set; }
        public virtual DbSet<Organizator> OrganizatorSet { get; set; }
        public virtual DbSet<Nagrada> NagradaSet { get; set; }
        public virtual DbSet<VipUlaznica> VipUlaznicaSet { get; set; }
        public virtual DbSet<ObicnaUlaznica> ObicnaUlaznicaSet { get; set; }
        public virtual DbSet<Gledalac> GledalacSet { get; set; }
        public virtual DbSet<Igrac> IgracSet { get; set; }
        public virtual DbSet<Kategorija> KategorijaSet { get; set; }
        public virtual DbSet<Stadion> StadionSet { get; set; }
        public virtual DbSet<Oprema> OpremaSet { get; set; }
        public virtual DbSet<Prodaje> ProdajeSet { get; set; }
        public virtual DbSet<Ucestvuje> UcestvujeSet { get; set; }
        public virtual DbSet<Turnir> TurnirSet { get; set; }
        public virtual DbSet<Mec> MecSet { get; set; }
        public virtual DbSet<Kolo> KoloSet { get; set; }
        public virtual DbSet<Odrzavanje> OdrzavanjeSet { get; set; }
    
        [DbFunction("ModelTeniskiTurniriContainer", "Funkcija1")]
        public virtual IQueryable<string> Funkcija1(string nazivmesta)
        {
            var nazivmestaParameter = nazivmesta != null ?
                new ObjectParameter("nazivmesta", nazivmesta) :
                new ObjectParameter("nazivmesta", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<string>("[ModelTeniskiTurniriContainer].[Funkcija1](@nazivmesta)", nazivmestaParameter);
        }
    
        public virtual int Procedure1(Nullable<int> id1, string naziv)
        {
            var id1Parameter = id1.HasValue ?
                new ObjectParameter("id1", id1) :
                new ObjectParameter("id1", typeof(int));
    
            var nazivParameter = naziv != null ?
                new ObjectParameter("naziv", naziv) :
                new ObjectParameter("naziv", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Procedure1", id1Parameter, nazivParameter);
        }
    }
}
